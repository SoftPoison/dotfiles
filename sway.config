# vim:fileencoding=utf-8:foldmethod=marker

# Read `man 5 sway` for a complete reference.

# Variables {{{

# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Your preferred terminal emulator
set $term kitty
set $menu wofi --show drun | xargs swaymsg exec --
set $lock swaylock -f -i '~/Pictures/wallpapers/lock.png' -s fill

# }}}

# Output configuration {{{

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg '~/Pictures/wallpapers/taplaos2.png' fill

# Mobile
output eDP-1 scale 2

# You can get the names of your outputs by running: swaymsg -t get_outputs

# }}}

# Execs {{{

# Start wallet
exec --no-startup-id /usr/lib/pam_kwallet_init

exec sway-audio-idle-inhibit

# Idle configuration
exec swayidle -w \
         timeout 300 "$lock" \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep "$lock"

# Notification Daemon
exec swaync

# exec --no-startup-id ~/bin/scripts/media.sh follow

# temporary, until I make an idle inhibitor program
# for_window [app_id="firefox"] inhibit_idle
# for_window [class="Firefox"] inhibit_idle
# for_window [app_id="noidle"] inhibit_idle

# Systemd trigger
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"

# Tray
#exec seafile-applet
exec seadrive-gui
exec nm-applet --indicator
exec solaar -w hide
exec tailscale-systray

# }}}

# Input configuration {{{

input "1739:52710:DLL0945:00_06CB:CDE6_Touchpad" {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

# }}}

# Key bindings {{{

# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec kitty --class=floating

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+Space exec $menu

# Lock the screen
bindsym $mod+l exec $lock

# Open a browser
bindsym $mod+s exec firefox

# Open a display configuration tool
bindsym $mod+p exec wdisplays

# start a file manager
bindsym $mod+e exec thunar

# show notifications
bindsym $mod+n exec swaync-client -t -sw

# Screenshotting
bindsym Print exec ~/bin/scripts/screenshot.sh
bindsym Shift+Print exec ~/bin/scripts/screenshot.sh region
bindsym Control+Print exec ~/bin/scripts/screenshot.sh current

# Emoji
bindsym $mod+period exec wofi-emoji

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pamixer -i 5
bindsym XF86AudioLowerVolume exec --no-startup-id pamixer -d 5
bindsym XF86AudioMute exec --no-startup-id pamixer -t
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Use playerctl to control media
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioPause exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# backlight
bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl s +5%
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl s 5%-

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Moving around {{{

# Move your focus around
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# }}}

# Workspaces {{{

# Tabbing through workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

# }}}

# Layout stuff {{{

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+t layout toggle tabbed split

# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
# bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
# bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# }}}

# Scratchpad {{{

# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+grave move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+grave scratchpad show

# }}}

# Resizing containers {{{

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# }}}

# Status Bar {{{

bar {
	swaybar_command waybar
	workspace_buttons yes
}

# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

# }}}

# }}}

# Style {{{

for_window [class=".*"] border pixel 3
default_border pixel
smart_borders on
gaps inner 12

# colours
# class                 border    backgr.   text    indicator
client.focused          #8e44adff #8e44ada0 #ffffff #3daee9
client.focused_inactive #2b303bff #2b303b80 #ffffff #484e50
client.unfocused        #2b303bff #2b303b80 #888888 #292d2e
client.urgent           #93303bff #93303ba0 #ffffff #ed1515

# make things floating
for_window [ class="floating" ] floating enable, resize set 1000 600

# }}}

include /etc/sway/config.d/*
